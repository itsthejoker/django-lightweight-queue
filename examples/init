#! /bin/sh
### BEGIN INIT INFO
# Provides:          project-queues
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Project queue runner
# Description:       Project queue runner
### END INIT INFO

set -u

NAME=project-queues
DAEMON=/path/to/manage.py

USER=www-data
GROUP=www-data

RUNPATH=/var/run/${NAME}
PIDFILE=${RUNPATH}/${NAME}.pid
LOGFILE=/var/log/${NAME}/${NAME}.%s.log

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

test -x ${DAEMON} || exit 0

. /lib/lsb/init-functions

case "${1:-}" in
	start)
		log_daemon_msg "Starting ${NAME}" ${NAME}

		for FILE in ${PIDFILE} ${LOGFILE}
		do
			mkdir -p $(dirname ${FILE})
			chown ${USER}:${GROUP} $(dirname ${FILE})
		done

                start-stop-daemon --start --oknodo --chuid ${USER}:${GROUP} \
                    --pidfile ${PIDFILE} \
                    --exec ${DAEMON} -- \
		    queue_runner \
		    --pidfile ${PIDFILE} \
		    --logfile ${LOGFILE}

		log_end_msg $?
        ;;

	stop)
		log_daemon_msg "Stopping ${NAME}" ${NAME}

		if start-stop-daemon --stop --quiet --retry TERM/30/forever/KILL --oknodo \
			--pidfile ${PIDFILE}
		then
			rm -rf ${RUNPATH}
			log_end_msg $?

			# Sometimes, killing just does not kill the queue
			# runners and I can't work out why. Thus, we ensure
			# that we really have none left over running in the
			# background.
			pgrep -u ${USER} -f queue_runner | xargs -r kill
		else
			rm -rf ${RUNPATH}
			log_end_msg $?
			exit 1
		fi
	;;

	restart|force-reload)
		${0} stop
		${0} start
        ;;

	*)
		echo "Usage: ${NAME} {start|stop|restart|force-reload}" >&2
		exit 1
        ;;
esac
